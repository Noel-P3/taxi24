// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Conductores {
  id Int @default(autoincrement()) @id
  nombre String @db.VarChar(75)
  apellido String @db.VarChar(75)
  status StatusDisponibilidad @default(ACTIVO) 
  ubicacionLatitud Decimal? @db.Decimal(10,7)
  ubicacionLongitud Decimal? @db.Decimal(10,7)
  Viajes Viajes[]
}
model Viajes {
  id Int @default(autoincrement()) @id
  pasajero Pasajeros @relation(fields: [pasajeroId], references: [id])
  pasajeroId Int
  conductor Conductores @relation(fields: [conductorId], references: [id])
  conductorId Int
  status StatusViajes @default(EN_PROCESO)
  latitudDesde Decimal @db.Decimal(10,7)
  longitudDesde Decimal @db.Decimal(10,7)
  latitudHasta Decimal @db.Decimal(10,7)
  longitudHasta Decimal @db.Decimal(10,7)  
}

model Pasajeros {
  id Int @default(autoincrement()) @id
  nombre String @db.VarChar(75)
  apellido String @db.VarChar(75)
  status StatusDisponibilidad @default(ACTIVO) 
  Viajes Viajes[]
}

enum StatusDisponibilidad {
  ACTIVO
  INACTIVO
}

enum StatusViajes {
  EN_PROCESO
  TERMINADO
}